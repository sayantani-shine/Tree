Node* buildTreePostIn(int inorder[], int is, int ie,int  postorder[], int ps, int pe, 
                                     map<int,int> &hm){
        if (ps>pe || is>ie) return NULL;
       Node* root = new Node(postorder[pe]);
        int ri = hm[postorder[pe]];
        Node* leftchild = buildTreePostIn(inorder, is, ri-1, postorder, ps, ps+ri-is-1, hm);
        Node* rightchild = buildTreePostIn(inorder,ri+1, ie, postorder, ps+ri-is, pe-1, hm);
        root->left = leftchild;
        root->right = rightchild;
        return root;
    }
Node* buildTree(int inorder[],int postorder[],int n) {
         
        map<int,int> hm;
        for (int i=0;i<n;++i)
            hm[inorder[i]] = i;
        return buildTreePostIn(inorder, 0, n-1, postorder, 0, 
                              n-1,hm);
    }
